/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.21
 * Generated at: 2020-04-22 15:34:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.CTFtIme.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class homepage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html lang=\"EN\" style=\"height: 100%;width: 100%;\">\n");
      out.write("<head>\n");
      out.write("\t<title>CTFtIme</title>\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("    \n");
      out.write("#challengeid{\n");
      out.write("\n");
      out.write("font-size: 40px;\n");
      out.write("font-family: fantasy;\n");
      out.write("margin-top: 2%;\n");
      out.write("margin-left: 4%;\n");
      out.write("color: green;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body style=\"width: 99%;height: 90%;\">\n");
      out.write("\n");

String username="";
int count=0;
Cookie cookies[]=request.getCookies();
if(cookies==null){
	response.sendRedirect("welcome");
	count+=1;
}

for(int i=0;cookies!=null&&i<cookies.length;i++){
    
    if(cookies[i].getName().equals("user")){
    
        username=cookies[i].getValue();
        count=count+1;
        
    }
    
}

 if(count==0){
    response.sendRedirect("welcome");
} 

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<div style=\"width: 100%;height: 40%;background-color: #343a40;\">\n");
      out.write("\n");
      out.write("  <p style=\"font-size: 350%;color: white;position: absolute;margin-top: 8%;color:white;font-family: sans-serif;margin-left: 32%;\">Hello, ");
      out.print(username );
      out.write("</p>\n");
      out.write("</div>\n");
      out.write("<p><center style=\"font-size: 25px;font-family: sans-serif;opacity: 0.8;\">Challenges</center></p>\n");
      out.write("<div style=\"height: 20%;width: 100%;border-style: solid;border-color: grey;margin-top: 3%;\" id=\"challenge1\"><span style=\"font-family: sans-serif;font-size: 20px;\">&nbsp;&nbsp;1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Crack, Open n Find &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Just find a secret image, over with the web.&#128540;</span><span style=\"margin-left: 40%;\"> - Web, stegno, crypto</span><br>\n");
      out.write("\t<p id=\"para\" style=\"font-family: sans-serif;font-size: 18px;margin-left: 3.7%;opacity: 0.7;\">Start the challenge here &nbsp;&nbsp;&nbsp;--> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a onclick=\"window.open('");
      out.print(request.getContextPath() );
      out.write("/challenge1', '_blank');\" href=\"\" style=\"\">/challenge1</a></p>\n");
      out.write("\t<input type=\"text\" minlength=\"1\" name=\"flag\" id=\"flag\" placeholder=\"flag format : CTFtIme{}\" style=\"width: 27%;height: 3.7%;position: absolute;font-size: 130%;border-color: #212529;border-style: solid;opacity: 0.5;margin-left: 4%;margin-top: 1%;font-family: sans-serif;\">\n");
      out.write("<button type=\"Submit\" onclick=\"myfun()\" id=\"butt\" style=\"letter-spacing: 1px;\n");
      out.write("    text-decoration: none;\n");
      out.write("    -moz-user-select: none;\n");
      out.write("    border-radius: 0;\n");
      out.write("    cursor: pointer;\n");
      out.write("    display: inline-block;\n");
      out.write("    margin-bottom: 0;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    font-size: 14px;\n");
      out.write("    line-height: 20px;\n");
      out.write("    font-weight: 700;\n");
      out.write("    padding: 8px 20px;color: #fff;\n");
      out.write("    background-color: #007bff;\n");
      out.write("    border-color: #007bff;margin-top: 1%;margin-left: 33%;\">Submit</button>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("function myfun(){\n");
      out.write("var xhr=new XMLHttpRequest();\n");
      out.write("var data=\"flag=\"+document.getElementById(\"flag\").value; \n");
      out.write("var url=\"");
      out.print(request.getContextPath() );
      out.write("/flag\";\n");
      out.write("\n");
      out.write("xhr.onreadystatechange = function() {\n");
      out.write("    if (this.readyState == 4 && this.status == 200){\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        var obj=JSON.parse(this.responseText);\n");
      out.write("        if(obj.result==\"success\"){\n");
      out.write("            document.getElementById(\"flag\").style.borderColor=\"green\";\n");
      out.write("        }\n");
      out.write("        else{\n");
      out.write("            document.getElementById(\"flag\").style.borderColor=\"red\";\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        setTimeout(function(){\n");
      out.write("            document.getElementById(\"flag\").value = '';\n");
      out.write("            location.reload();\n");
      out.write("        }, 1500);\n");
      out.write("        \n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("xhr.open(\"POST\",url,true);\n");
      out.write("xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n");
      out.write("xhr.send(data);\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    \n");
      out.write("var value=");
      out.print(request.getSession().getAttribute("challenge1"));
      out.write(";\n");
      out.write("if (value==true) {\n");
      out.write("\n");
      out.write("var challenge1=document.getElementById(\"challenge1\");\n");
      out.write("document.getElementById(\"flag\").remove();\n");
      out.write("document.getElementById(\"butt\").remove();\n");
      out.write("document.getElementById(\"para\").remove();\n");
      out.write("\n");
      out.write("\n");
      out.write("var b = document.createElement(\"div\"); \n");
      out.write("b.setAttribute(\"id\", \"challengeid\");\n");
      out.write("var tex1 = document.createTextNode(\"You Have Completed This Challenge. Pretty Easy ah?\");\n");
      out.write("b.appendChild(tex1);\n");
      out.write("\n");
      out.write("challenge1.appendChild(b);\n");
      out.write("challenge1.style.backgroundColor=\"#CBFDD8\";\n");
      out.write("challenge1.style.color=\"#006400\";\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
