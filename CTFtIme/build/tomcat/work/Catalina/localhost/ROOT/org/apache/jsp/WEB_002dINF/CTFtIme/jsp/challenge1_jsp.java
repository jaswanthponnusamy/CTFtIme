/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.21
 * Generated at: 2020-04-22 14:54:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.CTFtIme.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class challenge1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("\t<title>CTFtIme</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
String username="";
Cookie cookies[]=request.getCookies();
int count=0;
String user="";
int count2=0;
if(cookies==null){
	response.sendRedirect("welcome");
	count2+=1;
}

for(int i=0;cookies!=null&&i<cookies.length;i++){
    
    if(cookies[i].getName().equals("FlagImage")){
    
        username=cookies[i].getValue();
        count=count+1;
        
    }
    
    if(cookies[i].getName().equals("user")){
        
        user=cookies[i].getValue();
        count2=count2+1;
        
    }
    
}

if(count!=0){
	if(username.equals("http://yourhost:yourport/adminwifipage-jaswanth-me")){
		response.sendRedirect("Successwifi");
	}
	else{
		response.sendRedirect("fuckoff");
	}
}

if(count2==0){
	response.sendRedirect("welcome");
}


      out.write("\n");
      out.write("\n");
      out.write("<div><center style=\"font-size: 50px;font-family: sans-serif;\">Wifi Login</center></div>\n");
      out.write("<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/download.png\" height=\"300px\" style=\"margin-left: 600px;\n");
      out.write("    margin-top: 50px;\">\n");
      out.write("<div style=\"font-size: 40px;margin-top: 30px;\"><div><center>This is official website to login into</center></div><div><center>the wifi by administrators.</center></div><div><center>Can you crack this wifi passcode?</center></div></div>\n");
      out.write("<div style=\"margin-top: 60px;margin-left:390px;\"><span style=\"font-size: 30px;font-family: sans-serif;\">please submit the passcode here : </span>\n");
      out.write("<input type=\"text\" name=\"passcode\" id=\"passcode\" placeholder=\"wifi passcode..\" maxlength=\"8\" style=\"width: 300px;height: 30px;font-size: 18px;border-color: #212529;border-style: solid;opacity: 0.5;font-family: sans-serif;\">\n");
      out.write("<button type=\"submit\" onclick=\"myfun()\" style=\"letter-spacing: 1px;\n");
      out.write("    text-decoration: none;\n");
      out.write("    -moz-user-select: none;\n");
      out.write("    border-radius: 0;\n");
      out.write("    cursor: pointer;\n");
      out.write("    display: inline-block;\n");
      out.write("    margin-bottom: 0;\n");
      out.write("    vertical-align: middle;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    font-size: 14px;\n");
      out.write("    line-height: 20px;\n");
      out.write("    font-weight: 700;\n");
      out.write("    padding: 8px 20px;color: #fff;\n");
      out.write("    background-color: #007bff;\n");
      out.write("    \">submit</button>\n");
      out.write("</div>\n");
      out.write("<div id=\"result\" style=\"opacity: 0.7;margin-left: 980px;\n");
      out.write("    margin-top: 30px;\n");
      out.write("    font-size: 30px;\n");
      out.write("    font-family: sans-serif;\n");
      out.write("    font-weight: 600;\"></div>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("document.getElementById(\"result\").style.display=\"none\";\n");
      out.write("function myfun(){\n");
      out.write("var xhr=new XMLHttpRequest();\n");
      out.write("var data=\"?passcode=\"+document.getElementById(\"passcode\").value; \n");
      out.write("var url=\"");
      out.print(request.getContextPath() );
      out.write("/passcode\"+data;\n");
      out.write("\n");
      out.write("xhr.onreadystatechange = function() {\n");
      out.write("\tif (this.readyState == 4 && this.status == 200){\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tvar obj=JSON.parse(this.responseText);\n");
      out.write("\t\tif(obj.result==\"success\"){\n");
      out.write("\t\t\tdocument.getElementById(\"result\").style.color=\"green\";\n");
      out.write("\t\t\tdocument.getElementById(\"passcode\").style.borderColor=\"green\";\n");
      out.write("\t\t}\n");
      out.write("\t\telse{\n");
      out.write("\t\t\tdocument.getElementById(\"result\").style.color=\"red\";\n");
      out.write("\t\t\tdocument.getElementById(\"passcode\").style.borderColor=\"red\";\n");
      out.write("\t\t}\n");
      out.write("\t\tdocument.getElementById(\"result\").innerHTML = obj.result;\n");
      out.write("\t\tdocument.getElementById(\"result\").style.display=\"\";\n");
      out.write("\t\t\n");
      out.write("\t\tsetTimeout(function(){\n");
      out.write("\t\t    document.getElementById(\"result\").innerHTML = '';\n");
      out.write("\t\t    document.getElementById(\"result\").style.display=\"none\";\n");
      out.write("\t\t    location.reload();\n");
      out.write("\t\t}, 1000);\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("xhr.open(\"GET\",url,true);\n");
      out.write("xhr.send();\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
